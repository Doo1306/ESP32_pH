name: Build & Upload MAUI iOS IPA

on:
  workflow_dispatch: # cháº¡y thá»§ cÃ´ng tá»« GitHub

jobs:
  build-ios:
    runs-on: macos-latest

    steps:
      # 1. Láº¥y code
      - name: Check out repository
        uses: actions/checkout@v3

      # 2. Setup .NET 8
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      # 3. CÃ i Ä‘áº·t MAUI workload
      - name: Install MAUI workload
        run: dotnet workload install maui

      # 4. Giáº£i mÃ£ certificate & provisioning profile tá»« secrets
      - name: Decode Certificate & Provisioning
        run: |
          echo "${{ secrets.APPLE_CERTIFICATE_P12 }}" | base64 --decode > ios_distribution.p12
          echo "${{ secrets.APPLE_PROVISIONING_PROFILE }}" | base64 --decode > app.mobileprovision

       # 5. Import certificate vÃ o keychain
      - name: Install Certificate & Provisioning
        run: |
    # Táº¡o keychain táº¡m cho build
      security create-keychain -p "" build.keychain
      security import ios_distribution.p12 -k ~/Library/Keychains/build.keychain -P "${{ secrets.APPLE_CERTIFICATE_PASSWORD }}" -T /usr/bin/codesign -T /usr/bin/security -A
    
    # ThÃªm keychain nÃ y vÃ o danh sÃ¡ch
      security list-keychains -s ~/Library/Keychains/build.keychain
      security default-keychain -s ~/Library/Keychains/build.keychain
      security unlock-keychain -p "" ~/Library/Keychains/build.keychain
    
    # Giá»¯ keychain má»Ÿ trong 6h
      security set-keychain-settings -lut 21600 ~/Library/Keychains/build.keychain

    # Hiá»ƒn thá»‹ cert Ä‘á»ƒ debug (khÃ´ng áº£nh hÆ°á»Ÿng build)
      echo "ðŸ”‘ Available identities:"
      security find-identity -v -p codesigning || true

    # Copy provisioning profile vÃ o thÆ° má»¥c máº·c Ä‘á»‹nh
      mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
      cp app.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/
      # 6. Restore dependencies
      - name: Restore dependencies
        run: dotnet restore ESP32pH.csproj

      # 7. Build IPA (Ä‘Ã£ cÃ³ kÃ½ code)
      - name: Build iOS IPA
        run: dotnet publish ESP32pH.csproj -f net8.0-ios -c Release -o ./output /p:BuildIpa=true /p:ArchiveOnBuild=true

      # 8. Upload IPA nhÆ° artifact (táº£i tá»« GitHub Actions)
      - name: Upload IPA
        uses: actions/upload-artifact@v4
        with:
          name: ios-ipa
          path: ./output/**/*.ipa

      # 9. CÃ i Ä‘áº·t Fastlane
      - name: Install Fastlane
        run: sudo gem install fastlane -NV

      # 10. Upload lÃªn TestFlight
      - name: Upload to TestFlight
        run: |
          fastlane deliver \
            --username ${{ secrets.APPLE_ID }} \
            --app_identifier "com.haonguyen.PHMonitorApp" \
            --ipa "./output/**/*.ipa" \
            --skip_metadata \
            --skip_screenshots \
            --force
        env:
          FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
